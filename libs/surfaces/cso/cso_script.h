#ifndef ardour_cso_script_h
#define ardour_cso_script_h
#include <string>
//cso.lua script, built-in functions, encoded as base64
//6b754d537c467070d7f5e4f0868b05a1  /home/srv/source/git/7890/ardour_cso/libs/surfaces/cso/cso.lua
const std::string CSO_SCRIPT = 
"";
#endif
