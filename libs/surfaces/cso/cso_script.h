#ifndef ardour_cso_script_h
#define ardour_cso_script_h
#include <string>
//cso.lua script, built-in functions, encoded as base64
//1194b4f46c20128de7411cf95a1486af  /home/srv/source/git/7890/ardour_cso/libs/surfaces/cso/cso.lua
const std::string CSO_SCRIPT = 
"";
#endif
